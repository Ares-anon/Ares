src/backend/access/gin/ginget.c
=======================================================
lhs: 100644 | 57d378a42f72b2aa6a99c9c88a49c7d0ed65f737
rhs: 100644 | 9d73142ee93897d82f77d21a37e79f5b17604bc2
---@@ -560,6 +560,10 @@ startScan(IndexScanDesc scan)
 		}
 	}
 
+	/*
+	 * Now that we have the estimates for the entry frequencies, finish
+	 * initializing the scan keys.
+	 */
 	for (i = 0; i < so->nkeys; i++)
 		startScanKey(ginstate, so, so->keys + i);
 }
@@ -1763,7 +1767,6 @@ scanPendingInsert(IndexScanDesc scan, TIDBitmap *tbm, int64 *ntids)
 }
 
 
-#define GinIsNewKey(s)		( ((GinScanOpaque) scan->opaque)->keys == NULL )
 #define GinIsVoidRes(s)		( ((GinScanOpaque) scan->opaque)->isVoidRes )
 
 Datum
@@ -1771,6 +1774,7 @@ gingetbitmap(PG_FUNCTION_ARGS)
 {
 	IndexScanDesc scan = (IndexScanDesc) PG_GETARG_POINTER(0);
 	TIDBitmap  *tbm = (TIDBitmap *) PG_GETARG_POINTER(1);
+	GinScanOpaque so = (GinScanOpaque) scan->opaque;
 	int64		ntids;
 	ItemPointerData iptr;
 	bool		recheck;
@@ -1778,8 +1782,8 @@ gingetbitmap(PG_FUNCTION_ARGS)
 	/*
 	 * Set up the scan keys, and check for unsatisfiable query.
 	 */
-	if (GinIsNewKey(scan))
-		ginNewScanKey(scan);
+	ginFreeScanKeys(so); /* there should be no keys yet, but just to be sure */
+	ginNewScanKey(scan);
 
 	if (GinIsVoidRes(scan))
 		PG_RETURN_INT64(0);

---