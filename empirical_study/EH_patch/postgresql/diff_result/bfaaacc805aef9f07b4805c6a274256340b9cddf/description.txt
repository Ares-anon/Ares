{
    "author": "Tom Lane",
    "description": "Improve plpgsql's memory management to fix some function-lifespan leaks.\n\nIn some cases, exiting out of a plpgsql statement due to an error, then\ncatching the error in a surrounding exception block, led to leakage of\ntemporary data the statement was working with, because we kept all such\ndata in the function-lifespan SPI Proc context.  Iterating such behavior\nmany times within one function call thus led to noticeable memory bloat.\n\nTo fix, create an additional memory context meant to have statement\nlifespan.  Since many plpgsql statements, particularly the simpler/more\ncommon ones, don't need this, create it only on demand.  Reset this context\nat the end of any statement that uses it, and arrange for exception cleanup\nto reset it too, thereby fixing the memory-leak issue.  Allow a stack of\nsuch contexts to exist to handle cases where a compound statement needs\nstatement-lifespan data that persists across calls of inner statements.\n\nWhile at it, clean up code and improve comments referring to the existing\nshort-term memory context, which by plpgsql convention is the per-tuple\ncontext of the eval_econtext ExprContext.  We now uniformly refer to that\nas the eval_mcontext, whereas the new statement-lifespan memory contexts\nare called stmt_mcontext.\n\nThis change adds some context-creation overhead, but on the other hand\nit allows removal of some retail pfree's in favor of context resets.\nOn balance it seems to be about a wash performance-wise.\n\nIn principle this is a bug fix, but it seems too invasive for a back-patch,\nand the infrequency of complaints weighs against taking the risk in the\nback branches.  So we'll fix it only in HEAD, at least for now.\n\nTom Lane, reviewed by Pavel Stehule\n\nDiscussion: <17863.1469142152@sss.pgh.pa.us>\n",
    "summary": "Improve plpgsql's memory management to fix some function-lifespan leaks.",
    "date": "2016-08-17 14:51:10",
    "parent_hash": "092155465710b22ec9a99820ce6400a889580805",
    "hash": "bfaaacc805aef9f07b4805c6a274256340b9cddf"
}