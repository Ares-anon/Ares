{
    "author": "Tom Lane",
    "description": "Fix memory leak and other bugs in ginPlaceToPage() & subroutines.\n\nCommit 36a35c550ac114ca turned the interface between ginPlaceToPage and\nits subroutines in gindatapage.c and ginentrypage.c into a royal mess:\npage-update critical sections were started in one place and finished in\nanother place not even in the same file, and the very same subroutine\nmight return having started a critical section or not.  Subsequent patches\nband-aided over some of the problems with this design by making things\neven messier.\n\nOne user-visible resulting problem is memory leaks caused by the need for\nthe subroutines to allocate storage that would survive until ginPlaceToPage\ncalls XLogInsert (as reported by Julien Rouhaud).  This would not typically\nbe noticeable during retail index updates.  It could be visible in a GIN\nindex build, in the form of memory consumption swelling to several times\nthe commanded maintenance_work_mem.\n\nAnother rather nasty problem is that in the internal-page-splitting code\npath, we would clear the child page's GIN_INCOMPLETE_SPLIT flag well before\nentering the critical section that it's supposed to be cleared in; a\nfailure in between would leave the index in a corrupt state.  There were\nalso assorted coding-rule violations with little immediate consequence but\npossible long-term hazards, such as beginning an XLogInsert sequence before\nentering a critical section, or calling elog(DEBUG) inside a critical\nsection.\n\nTo fix, redefine the API between ginPlaceToPage() and its subroutines\nby splitting the subroutines into two parts.  The \"beginPlaceToPage\"\nsubroutine does what can be done outside a critical section, including\nfull computation of the result pages into temporary storage when we're\ngoing to split the target page.  The \"execPlaceToPage\" subroutine is called\nwithin a critical section established by ginPlaceToPage(), and it handles\nthe actual page update in the non-split code path.  The critical section,\nas well as the XLOG insertion call sequence, are both now always started\nand finished in ginPlaceToPage().  Also, make ginPlaceToPage() create and\nwork in a short-lived memory context to eliminate the leakage problem.\n(Since a short-lived memory context had been getting created in the most\ncommon code path in the subroutines, this shouldn't cause any noticeable\nperformance penalty; we're just moving the overhead up one call level.)\n\nIn passing, fix a bunch of comments that had gone unmaintained throughout\nall this klugery.\n\nReport: <571276DD.5050303@dalibo.com>\n",
    "summary": "Fix memory leak and other bugs in ginPlaceToPage() & subroutines.",
    "date": "2016-04-20 14:25:15",
    "parent_hash": "a343e223a5c33a7283a6d8b255c9dbc48dbc5061",
    "hash": "bde361fef5ea3c65074a0c95c724fae5ac8a1bb5"
}